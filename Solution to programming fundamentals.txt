Part 1 â€“ Solution to Python Portfolio tasks

Solution to Task 1 Python portfolio
Reading the dataset into a suitable data structure and printing its first 10 rows on the screen

data=pd.read_csv("C:/Users/pc/Desktop/001186932/Iris.csv")
data.head(10)

Measures of Central Tendency (mean and median) 
mean_and_median=data.groupby("Species").agg({'Petal width':['mean' ,'median']})
Values
Mean Petal width for Setosa=0.244
Median Petal width for Setosa =0.2
Mean Petal width for Versicolor=1.326
Mean Petal width for Versicolor=1.326
Median Petal width for Setosa =1.3
Mean Petal width for Virginia=2.026
Median Petal width for Virginia =2.0

Measures of Dispersion
std_max_min =data.groupby("Species").agg({'Petal width':[ 'std' ,'max' , 'min' ]})
std_max_min_ = std_max_min.iloc[:,:]
std_max_min_.columns=['petal_width_std','petal_width_max' , 'petal_width_min']
std_max_min_['Range']=std_max_min_['petal_width_max']-std_max_min_['petal_width_min']
std_max_min_range=std_max_min_
values
Standard deviation of Petal width for Setosa =0.107210
Range of Petal width for Setosa =0.5
Standard deviation of Petal width for Versicolor =0.197753
Range of Petal width for Versicolor =0.8
Standard deviatiation of Petal width for Virginia =0.274650
Range of Petal width for Virginia =1.1



Solution to Task 2 Python portfolio
BoxPlot

It shows the type of distribution of the data
It shows the quartile of the data
The upper whisker and lower whisker shows the range within which the majority of values fall
It whether there are outliers in the data or not
It also shows the median of the data

#Python code to plot boxplot
petalwidth_setosa.boxplot(column="Sepal length" , return_type="axes")
 











Solution to Task 3 Python portfolio
#Python code to plot parallel_coordinate
#Parallel coordinates plot of iris data
plt.figure(figsize=(12,10))
parallel_coordinates(data, "Species" , color=("red", "blue" , "green"), )
plt.show()
 











Solution to R part
Solution to task 1:Data transformation
Number 1.
> library("tidyr")
> who
> who_=pivot_longer(data=who,
+ cols=c("new_sp_m014", "new_sp_m1524", "new_sp_m2534", "new_sp_m3544", "new_sp_m4554", "new_sp_m5564", "new_sp_m65", "new_sp_f014", "new_sp_f1524", "new_sp_f2534", "new_sp_f3544", "new_sp_f4554", "new_sp_f5564", "new_sp_f65", "new_sn_m014", "new_sn_m1524", "new_sn_m2534", "new_sn_m3544", "new_sn_m4554", "new_sn_m5564", "new_sn_m65", "new_sn_f014", "new_sn_f1524", "new_sn_f2534", "new_sn_f3544", "new_sn_f4554", "new_sn_f5564", "new_sn_f65", "new_ep_m014", "new_ep_m1524", "new_ep_m2534", "new_ep_m3544", "new_ep_m4554", "new_ep_m5564", "new_ep_m65", "new_ep_f014", "new_ep_f1524", "new_ep_f2534", "new_ep_f3544", "new_ep_f4554", "new_ep_f5564", "new_ep_f65", "newrel_m014", "newrel_m1524", "newrel_m2534", "newrel_m3544", "newrel_m4554", "newrel_m5564", "newrel_m65", "newrel_f014", "newrel_f1524", "newrel_f2534", "newrel_f3544", "newrel_f4554", "newrel_f5564", "newrel_f65"),
+ names_to="key",
+ values_to="cases")

> who1=who_%>% drop_na()

Solution to Task1 number 2.
Who2=who1
> library("stringr")
> who2$key<- str_replace(who1$key , "newrel" , "new_rel")

Solution to Task1 number 3.
> who3<-who2%>%separate(key,c("new","type","sexage"),sep="_") 
%>% is used to 

Solution to Task1 number 4.
> who4<- who3%>%separate(sexage,c("sex","age"),sep="(?<=[A-Za-z])(?=[0-9])")


Solution to Task1 number 5.

> head(who4 , n=5)
> tail(who4 , n=5)

	Solution to Task1 number 6
> write.table(who , file="C:/Users/pc/Desktop/001186932/who4.csv")




Solution to Task 2
Solution to Question  1.
> mean(Nile)
[1] 919.35

> median(Nile)
[1] 893.5

> mode <- function(x) {
+       ux <- unique(x)
+       ux[which.max(tabulate(match(x, ux)))]}
> mode(Nile)
[1] 1160

> var(Nile)
[1] 28637.95

> std<-sqrt(var(Nile))
> std
[1] 169.2275

Solution to Question 2
> min(Nile)
[1] 456
> max(Nile)
[1] 1370
> rangeNile <- max(Nile)-min(Nile)
> print(rangeNile)
[1] 914


Solution to Question 3
> IQR(Nile)
[1] 234

> quantile(Nile)
    0%    25%    50%    75%   100% 
 456.0  798.5  893.5 1032.5 1370.0 

Inter quartile range measures the spread of the middle 50% of the data, while quartile shows the percentage of data below some values. For example, 50% quartile = 893.5 , This means that 50% of the data are less than 893.5

Solution to question 4
#Plot Histogram
> hist(Nile , main= "Histogram for Annual Flow of River Nile for years 1871 - 1970" , xlab="Annual Flow" , ylab="Frequency")

> nile_breaks <- hist(Nile)$breaks
> nile_colors <- c("yellow", "blue1","bisque", "chocolate", "brown2","cadetblue", "aquamarine", "coral","chartreuse","red")


>hist(Nile , main= "Annual Flow of River Nile for years 1871 - 1970" , xlab="Annual Flow" , ylab="Frequency", breaks=nile_breaks , col=nile_colors)
 























Solution to question 5
#Plot QQNORM
>qqnorm(Nile, main="Annual Flow of River Nile from 1871 - 1970", xlab="Years" , ylab="Flow" )
> qqline(Nile , col="red" , lwd=2)
 
The diagram above shows that the annual flow of river Nile has a high degree of normality. Though, with fluctuations, many data points are concentrated at the centre.












Solution to question 6
>plot(Nile , main="Plot of Annual Flow of River  Nile",type="l" , xlab="Years" , ylab="Flow" , col="red" , lwd=2)
 













Solution to task 3 Question 1
> print(ggplot(data=mpg, aes(x=hwy , y=cty ,color= manufacturer )) +geom_point() + ggtitle("Vehicle Brand vs Highway and City")+
+ labs(y="City", x="Highway"))

 
Comment: audi has the best mpg , it has highest city mileage and Highway mileage












Solution to  task 3 question 2
>ggplot(mpg, aes(displ, cty,hwy,color=manufacturer))+ geom_point()+ facet_wrap(vars(class))
 

Comment:SubCompact has the best mpg in the city when categorized by vehicle type.











Solution to question 3
# Plot of type of car, regarding their displ range(size of engine) ,mpg performance in city and highway, categorized by the number of cylinders and the drive type.

>ggplot(mpg, aes(displ, cty , color=hwy))+ geom_point()+ facet_grid(cyl~drv)

 
Considering the diagram above, front wheel cars have the best mpg performance in both cities and highways.














# Plot of type of car, regarding their displ range(size of engine) ,mpg performance in highway, categorized by the number of cylinders and the drive type.
> ggplot(mpg, aes(displ, hwy))+ geom_point()+ facet_grid(cyl~drv)
 

# Plot of typeof car, regarding their displ range(size of engine) ,mpg performance in city, categorized by the number of cylinders and the drive type
>ggplot(mpg, aes(displ, cty , color=hwy))+ geom_point()+ facet_grid(cyl~drv)
 


Comment: comparing the two diagrams above, Volkswagen front wheel have the highest mileage in the city and on highway. As a customer, I will buy a Volkswagen front wheel car.
